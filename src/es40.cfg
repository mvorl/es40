/*
 * ES40 emulator.
 * Copyright (C) 2007-2008 by the ES40 Emulator Project
 *
 * Website: http://sourceforge.net/projects/es40
 * E-mail : camiel@camicom.com
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 * 
 * Although this is not required, the author would appreciate being notified of, 
 * and receiving any modifications you may make to the source code that might serve
 * the general public.
 */

/**
 * \file
 * Sample configuration file.
 *
 * $Id: es40.cfg,v 1.22 2008/03/05 14:41:46 iamcamiel Exp $
 *
 * X-1.22           Camiel Vanderhoeven                             05-MAR-2008
 *      Multi-threading version.
 *
 * X-1.21           Camiel Vanderhoeven                             02-MAR-2008
 *      Natural way to specify large numeric values ("10M").
 *
 * X-1.20           Camiel Vanderhoeven                             16-FEB-2008
 *      Added Symbios 53C810 controller.
 *
 * X-1.19         	Camiel Vanderhoeven                             13-FEB-2008
 *      Put SCSI controller on a different PCI ID, and clarified PCI
 *      configuration rules. Thanks to Eduardo Marcelo Serrat.
 *
 * X-1.18         	Camiel Vanderhoeven                             25-JAN-2008
 *      Added autocreate_size option for disk-images.
 *
 * X-1.17         	Camiel Vanderhoeven                             25-JAN-2008
 *      Added option to disable the icache.
 *
 * X-1.16         	Camiel Vanderhoeven                             23-JAN-2008
 *      Added comments for win32 and X11 gui's.
 *
 * X-1.15         	Camiel Vanderhoeven                             05-JAN-2008
 *      Added device as a disk.
 *
 * X-1.14         	David Hittner                                   04-JAN-2008
 *      Replaced decnet variable with mac variable.
 *
 * X-1.13         	Camiel Vanderhoeven                             12-DEC-2007
 *      Changed the way disks work.
 *
 * X-1.12         	Camiel Vanderhoeven                             10-DEC-2007
 *      Added vga_console parameter.
 *
 * X-1.11         	Camiel Vanderhoeven                             10-DEC-2007
 *      New structure for configuration file.
 *
 * X-1.10         	Camiel Vanderhoeven                             10-DEC-2007
 *      Unintended version # increase.
 *
 * X-1.9         	Brian Wheeler                                   22-NOV-2007
 *      Added nic0.disabled configuration option.
 *
 * X-1.8		Camiel Vanderhoeven				17-NOV-2007
 *	Clarified nic0.adapter syntax.
 *
 * X-1.7		Camiel Vanderhoeven				17-NOV-2007
 *	Added configuration lines for the network interface.
 *
 * X-1.6		Camiel Vanderhoeven				16-APR-2007
 *	Added configuration lines to start PuTTy for each serial port.
 *
 * X-1.5		Camiel Vanderhoeven				10-APR-2007
 *   a)	Added rom.decompressed variable.
 *   b)	Fixed some of the documentation mistakes.	
 *
 * X-1.4		Camiel Vanderhoeven				1-APR-2007
 *	Documented, and added old changelog comments.
 *
 * X-1.3		Brian wheeler					7-FEB-2007
 *	Added memory.bits variable.
 *
 * X-1.2		Brian Wheeler					3-FEB-2007
 *	Added serial.base variable.
 *
 * X-1.1		Brian Wheeler					3-FEB-2007
 *	Created this file.
 **/

// Specifying values
//
// Numeric values can be specified as a number ("500"), as a number with a
// suffix ("100K" = 102400), or as a fancy combination ("2G512M" = 2.5 G).
//
// Boolean values can be specified as "true"/"false", "yes"/"no", or "1"/"0".
//
// String-constants are best specified in double quotes ("string"). If the
// string needs to contain double quotes, double the double quotes. 
// ("One ""word"" in this string is quoted")

// GUI
//
// If you want to use an emulated graphics card, the emulator needs to interface
// with the OS'es user interface. There are three ways to do this:
//
// On systems that have the SDL (simple directmedia layer) run-time libraries
// installed, you can use SDL. (gui=sdl) The emulator needs to be compiled with
// -DHAVE_SDL.
//
// On MS Windows-systems, you can use Win32 API calls. (gui=win32)
//
// On many Linux, BSD and UNIX systems, you can use X11. (gui=X11)

gui = sdl 
{
  keyboard.use_mapping = false;
  keyboard.map = "keys.map";
}

sys0 = tsunami 
{

// VARIABLE: rom.srm
//
// Specify the filename of the original (compressed) ROM image. This file is 
// essential to the functioning of the emulator. This file an be obtained from HP 
// (it's on the firmware-update CD-ROM for Alpha ES40 systems).
//
  rom.srm = "rom\cl67srmrom.exe";

// VARIABLE: rom.decompressed
//
// Specify the filename of the decompressed ROM image. If possible, it will be
// created the first time the emulator is run. When it exists, it allows the
// emulator to start quicker by skipping the ROM decompression.
//
  rom.decompressed = "rom\decompressed.rom";

// VARIABLES: rom.flash and rom.dpr
//
// Specify the filenames of Flash and DPR ROM images. These files are not required,
// but will be created he first time the emulator runs.
// Contents of Flash and DPR ROM will be put in these files after successful 
// termination of the emulator. This allows setting SRM variables such as auto_action
// and boot_osflags. 
//
  rom.flash = "rom\flash.rom";
  rom.dpr = "rom\dpr.rom";

// VARIABLE: memory.bits
//
// Only amounts of memory that are a power of 2 are supported. This number
// determines the amount of memory, by setting the number of bits in the address
// (and thus which power of 2).
//
// 26 = 64 MB
// 27 = 128MB
// 28 = 256 MB
// 29 = 512 MB
// 30 = 1GB
// 31 = 2GB
//
  memory.bits = 30;

  cpu0 = ev68cb
  {
    // VARIABLE: icache
    //
    // enables or disables the onchip-cache. The emulator runs faster
    // when this is disabled, but that might lead to problems with some
    // OS'es, so here is the option to enable it.
    icache = false;
    speed = 800M;
  }

  cpu1 = ev68cb
  {
    icache = false;
    speed = 800M;
  }

// System Internal PCI Devices: ali, ali_ide, ali_usb
//
// The following PCI-devices are built into the system, and should
// always be at the PCI-id's they are on in this sample configuration
// file for compatibility. 

  pci0.7 = ali{
    mouse.enabled = true;
    lpt.outfile = "lpt.out";
    vga_console = true;
  }

  pci0.15 = ali_ide 
  {
    // sub-components: disk<x>.<y>
    //
    // Here, up to 4 IDE disks can be defined (0.0, 0.1, 1.0 and 1.1).
    //
    // file: create a disk using a file on the host filesystem as a disk image

    disk0.0 = file
    {
      file =          "img\disk0.img";
      serial_number = "VMS";
      rev_number    = "8.3";
      model_number  = "OpenVMS8.3";
      read_only     = false;
      cdrom         = false;

      // if the file does not exist, it will be created if autocreate_size is set
      // to the desired size of the disk.
      autocreate_size = 600M;
    }
    disk1.0 = file
    {
      file =          "img\vms83.iso";
      read_only     = true;
      cdrom         = true;
    }
    
    // device: create a disk using a physical device
    //
    // WARNING: making a physical disk device writeable here may
    // seriously jeopardize the contents of that disk.
    //
    // Windows syntax for device: \\.\CDRom0, \\.\PhysicalDrive0
    //
    // UNIX-like syntax for device: /dev/sda
    
    disk1.0 = device
    {
      device =          "\\.\CDRom0";
      read_only     = true;
      cdrom         = true;
    }
    
    // ramdisk: create a disk using a portion of host RAM
    disk1.1 = ramdisk 
    {
      size = 10M;
    }
  }

  pci0.19 = ali_usb {}

// "Free" PCI Devices
//
// These can occupy pci0.1 .. pci0.4 and pci1.1 .. pci1.6
//
// AFAIK, VGA should always be on pci0.x.

  pci0.2 = cirrus
  {
    rom = "rom\vgabios-0.6a.debug.bin";
  }

//pci0.2 = s3
//{
//  rom = "rom\vgabios-0.6a.debug.bin";
//}

  // Symbios SCSI controller
  //
  // There are two flavors of SCSI controllers on the emulator; 53c810
  // and 53c895. The 53c810 supports 7 disks (0.0..0.6), the 53c895
  // supports 15 disks (0.0..0.6 and 0.8..0.15).
  //
  // Right now, the 53c810 is the only controller that works with OpenVMS.
  pci0.3 = sym53c810
  {
   disk0.0 = file
    {
      file =          "img\dka0.img";
      read_only     = false;
      cdrom         = false;
    }
    disk0.4 = file
    {
      file =          "img\scsi_cd.iso";
      read_only     = true;
      cdrom         = true;
    }
    disk0.5 = ramdisk 
    {
      size = 10M;
    }
  }

  pci0.4 = dec21143 {

    // VARIABLE: adapter
    //
    // Defines the host computer's adapter to use for the emulated NIC. If you're unsure
    // of this, start the emulator without this variable set, and you will be presented
    // with a list of adapters to choose from. You can enter the name indicated on this 
    // line.
    //
    // Windows syntax:
    // adapter = "\Device\NPF_{F266CDC2-6BA2-43D8-8B00-1C468F737ED7}"
    //
    // Linux syntax:
    //adapter = "eth0"
    
    //adapter = "\Device\NPF_{F266CDC2-6BA2-43D8-8B00-1C468F737ED7}";

    // VARIABLE: mac
    //
    // Defines the ethernet MAC address to be used by the virtual nic.
    // The variable format is: xx-xx-xx-xx-xx-xx, where all values are in hex.
    // This value should be unique on your network, or Bad Things Will Happen.
    // 
    // The default value is: 08-00-2B-E5-40-<nic#>

	//mac = "08-00-2B-E5-40-00";
  }

  serial0 = serial {

    // VARIABLE: port
    //
    // Determines which Telnet port is opened to receive connections for the emulated
    // serial port. The default is 8000 + the port number.

    port = 21264;
 
    // VARIABLE: action
    //
    // Defines the action to take for each serial port (= a telnet client). If you want
    // to connect manually, leave this out.

    action = """c:\Program Files\PuTTY\putty.exe"" telnet://localhost:21264";
  }

  serial1 = serial {
    port = 21265;
    action = """c:\Program Files\PuTTY\putty.exe"" telnet://localhost:21265";
  }
}




